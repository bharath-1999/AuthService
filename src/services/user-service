const UserRepository = require('../repositories/user-repository')
const jwt = require('jsonwebtoken')
const bcrypt = require('bcrypt')
const userRepository = new UserRepository()
class UserService {
    constructor() {
        this.userRepository = userRepository;
    }

    async create(data) {
        try {
            console.log(this.userRepository)
            const user = await this.userRepository.create(data);
            return user;
        } catch (error) {
            console.log('something went wrong in user');
            throw error;
        }
    }

    async signin(email, plainPassword){
        try {
            const user = await this.userRepository.getByEmail(email);
            const match = this.checkPassword(plainPassword,user.password);
            if(!match){
                console.log("passwrord doest match")
                throw { error: 'incorrect password'};
            }

            const newJWT = this.createToken({email: user.email, id: user.id});
            return newJWT  
        } catch (error) {
            console.log("something went wrong in signing process");
            throw { error }
        }
    }


    createToken(user) {
        try {
            const result = jwt.sign(user, 'auth', {expiresIn: '1h'})
            return result;
        } catch (error) {
            console.log("something went wrong in token creation");
            throw error;
        }
    }

    verifyToken(token) {
        try {
            const response = jwt.verify(token, 'auth');
            return response;
        } catch (error) {
            throw error;
        }
    }

    checkPassword(plainPassword, encryptedPassword){
        try {
            return bcrypt.compareSync(plainPassword,encryptedPassword)
        } catch (error) {
            console.log("something went wrong in password")
        }
    }
}
module.exports = UserService